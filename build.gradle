buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.2'
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'application'
apply plugin: 'com.github.johnrengelman.shadow'

sourceCompatibility = 1.8
targetCompatibility = 1.8

group = 'com.servicewizard'
version = '1.0.0a'

repositories {
    mavenCentral()
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
        resources {
            srcDir 'src/main/resources'
        }
    }
    sample {
        java {
            srcDir 'src/sample/java'
        }
        resources {
            srcDir 'src/sample/resources'
        }
    }
}

sampleClasses.dependsOn 'classes'

configurations {
    sampleCompile { extendsFrom compile }
    sampleRuntime { extendsFrom sampleCompile, runtime }
}

dependencies {
    compile 'io.dropwizard:dropwizard-core:0.7.1', 'org.reflections:reflections:0.9.9'
    sampleCompile sourceSets.main.output
    testCompile 'junit:junit:4.11'
}

mainClassName = 'com.servicewizard.Main'

run {
    classpath sourceSets.sample.runtimeClasspath
    args 'com.sampleapp.resource', 'output', 'ToDoApp', 'http://localhost:8080'
}

jar {
    from sourceSets.main.output
    
    manifest {
        attributes 'Main-Class': mainClassName
    }
}

task sample (type:JavaExec) {
	main 'com.sampleapp.ToDoAPI'
	classpath sourceSets.sample.runtimeClasspath
	args 'server', 'config.yml'
}